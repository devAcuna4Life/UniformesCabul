/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package presente;

import java.sql.Statement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;

public class Pedidos extends javax.swing.JFrame {

    ConexionMys con = new ConexionMys();
    Connection cn = con.conectar();

    
     
    public Pedidos() {
        initComponents();
        mostrarPedidos();
       
    }

    private void mostrarPedidos() {
        DefaultTableModel modelo = new DefaultTableModel();

        // Se añaden las columnas al modelo, incluyendo la columna de la fecha
        modelo.addColumn("NoPedido");
        modelo.addColumn("Equipo");
        modelo.addColumn("ModeloUniforme");
        modelo.addColumn("NoUniformes");
        modelo.addColumn("Precio");
        modelo.addColumn("Fecha"); // Nueva columna para la fecha

        // Se establece el modelo en la tabla jTable1
        jTable1.setModel(modelo);

        // Consulta SQL para obtener los pedidos
        String consultaSql = "SELECT * FROM pedidos";

        // Arreglo para almacenar los datos de cada fila
        String data[] = new String[6]; // Ajustado para incluir la columna de la fecha

        // Declaración de la declaración de SQL
        Statement st;

        try {
            // Se crea la declaración SQL
            st = cn.createStatement();

            // Se ejecuta la consulta
            ResultSet rs = st.executeQuery(consultaSql);

            // Se recorre el conjunto de resultados
            while (rs.next()) {
                // Se obtiene el valor de la columna "NoPedido"
                data[0] = rs.getString(1);

                // Validar que NoPedido sea un número
                if (isNumeric(rs.getString(1))) {
                    // Si es un número, se asigna el valor
                    data[0] = rs.getString(1);
                } else {
                    // Si NoPedido no es un número, se asigna un valor por defecto o muestra un mensaje de error
                    data[0] = "Caracteres Inválidos";
                }

                // Se obtienen los valores de las otras columnas
                data[1] = rs.getString(2);
                data[2] = rs.getString(3);
                data[3] = rs.getString(4);

                // Validar que Precio sea un número
                if (isNumeric(rs.getString(5))) {
                    // Si es un número, se asigna el valor
                    data[4] = rs.getString(5);
                } else {
                    // Si Precio no es un número, se asigna un valor por defecto o muestra un mensaje de error
                    data[4] = "Caracteres Inválidos";
                }

                // Se obtiene la fecha
                data[5] = rs.getString(6); // Ajustar al nombre real de la columna en la base de datos

                // Se agrega la fila al modelo de la tabla
                modelo.addRow(data);
            }
        } catch (SQLException e) {
            // Se imprime un mensaje de error en caso de una excepción SQL
            System.out.println("Error: " + e);
        }
    }

    private boolean isNumeric(String str) {
        try {
            Double.parseDouble(str);
            return true;
        } catch (NumberFormatException e) {
            return false;
        }
    }

    public DefaultTableModel obtenerDatosPedidos() {
    DefaultTableModel modelo = new DefaultTableModel();
    modelo.addColumn("NoPedido");
    modelo.addColumn("Equipo");
    modelo.addColumn("ModeloUniforme");
    modelo.addColumn("NoUniformes");
    modelo.addColumn("Precio");
    modelo.addColumn("Fecha"); // Nueva columna para la fecha

    try {
        Statement st = cn.createStatement();
        ResultSet rs = st.executeQuery("SELECT * FROM pedidos");

        while (rs.next()) {
            Object[] data = {
                rs.getString(1),
                rs.getString(2),
                rs.getString(3),
                rs.getString(4),
                rs.getString(5),
                rs.getString(6)  // Ajusta el índice según la posición de la fecha en tu tabla
            };
            modelo.addRow(data);
        }
    } catch (SQLException e) {
        System.out.println("Error al obtener datos de pedidos: " + e);
    }

    return modelo;
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtEquipo = new javax.swing.JTextField();
        txtModeloUniforme = new javax.swing.JTextField();
        txtNoUniformes = new javax.swing.JTextField();
        txtPrecio = new javax.swing.JTextField();
        txtNoPedido = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnRegistrar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();
        btnCompletado = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        jPopupMenu1.setComponentPopupMenu(jPopupMenu1);
        jPopupMenu1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                jPopupMenu1AncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jMenuItem1.setText("ELIMINAR");
        jMenuItem1.setComponentPopupMenu(jPopupMenu1);
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jPopupMenu1.add(jMenuItem1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setText("Equipo:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Modelo:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("NoUniformes:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Precio:");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        txtNoPedido.setEditable(false);
        txtNoPedido.setBackground(new java.awt.Color(255, 255, 255));

        jLabel6.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/IMGpedidos(1).jpg"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txtNoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(60, 60, 60)
                        .addComponent(jLabel5)))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtEquipo, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                            .addComponent(txtModeloUniforme)
                            .addComponent(txtNoUniformes))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 323, Short.MAX_VALUE)
                        .addComponent(jLabel6)
                        .addGap(28, 28, 28))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(txtNoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(1, 1, 1)
                                .addComponent(jLabel1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(txtEquipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtModeloUniforme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtNoUniformes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnRegistrar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRegistrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/reportes.png"))); // NOI18N
        btnRegistrar.setText("Registrar");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnActualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/actua (1).png"))); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnCompletado.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCompletado.setForeground(new java.awt.Color(0, 153, 0));
        btnCompletado.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/producto.png"))); // NOI18N
        btnCompletado.setText("-Vendido-");
        btnCompletado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompletadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addComponent(btnActualizar)
                .addGap(32, 32, 32)
                .addComponent(btnCompletado))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRegistrar)
                    .addComponent(btnActualizar)
                    .addComponent(btnCompletado)))
        );

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.setComponentPopupMenu(jPopupMenu1);
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                jTable1ComponentHidden(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Regresar.jpg"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 857, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(78, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE)
                .addGap(34, 34, 34)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        // TODO add your handling code here:
         try {
        // Obtener la fecha actual
        java.util.Date fechaActual = new java.util.Date();
        java.sql.Date fechaSQL = new java.sql.Date(fechaActual.getTime());

        // Agregar la fecha al PreparedStatement
        PreparedStatement ps = cn.prepareStatement("INSERT INTO pedidos (Equipo, ModeloUniforme, NoUniformes, Precio, Fecha) VALUES (?,?,?,?,?)");
        ps.setString(1, txtEquipo.getText());
        ps.setString(2, txtModeloUniforme.getText());
        ps.setInt(3, Integer.parseInt(txtNoUniformes.getText()));
        ps.setDouble(4, Double.parseDouble(txtPrecio.getText()));
        ps.setDate(5, fechaSQL);

        ps.executeUpdate();

        JOptionPane.showMessageDialog(rootPane, "Datos guardados correctamente");
        mostrarPedidos();

        // Limpiar los campos después de la inserción
        txtEquipo.setText("");
        txtModeloUniforme.setText("");
        txtNoUniformes.setText("");
        txtPrecio.setText("");
    } catch (SQLException | NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "Error al registrar pedido" + e);
    }
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

        int fila = jTable1.getSelectedRow();
        if (fila >= 0) {
            this.txtNoPedido.setText(jTable1.getValueAt(fila, 0).toString());
            this.txtEquipo.setText(jTable1.getValueAt(fila, 1).toString());
            this.txtModeloUniforme.setText(jTable1.getValueAt(fila, 2).toString());
            this.txtNoUniformes.setText(jTable1.getValueAt(fila, 3).toString());
            this.txtPrecio.setText(jTable1.getValueAt(fila, 4).toString());// Ajusta el índice según la posición de Precio en tu tabla
        } else {
            JOptionPane.showMessageDialog(rootPane, "Selecciona una fila primero.");
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
       try {
        // Obtener la fecha actual
        java.util.Date fechaActual = new java.util.Date();
        java.sql.Date fechaSQL = new java.sql.Date(fechaActual.getTime());

        PreparedStatement ps = cn.prepareStatement("UPDATE pedidos SET Equipo=?, ModeloUniforme=?, NoUniformes=?, Precio=?, Fecha=? WHERE NoPedido=?");
        ps.setString(1, txtEquipo.getText());
        ps.setString(2, txtModeloUniforme.getText());
        ps.setInt(3, Integer.parseInt(txtNoUniformes.getText()));
        ps.setDouble(4, Double.parseDouble(txtPrecio.getText()));
        ps.setDate(5, fechaSQL);
        ps.setDouble(6, Integer.parseInt(txtNoPedido.getText()));

        int indice = ps.executeUpdate();

        if (indice > 0) {
            JOptionPane.showMessageDialog(rootPane, "Datos actualizados correctamente");
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se seleccionó una fila");
        }

        // Limpiar los campos después de la actualización
        txtNoPedido.setText("");
        txtEquipo.setText("");
        txtModeloUniforme.setText("");
        txtNoUniformes.setText("");
        txtPrecio.setText("");
        mostrarPedidos();
    } catch (SQLException | NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "Error al actualizar datos: " + e);
    }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void jPopupMenu1AncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jPopupMenu1AncestorAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jPopupMenu1AncestorAdded

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
      try {
    int filaSeleccionada = jTable1.getSelectedRow();

    if (filaSeleccionada != -1) {
        // Obtener datos de la fila seleccionada
        String noPedido = jTable1.getValueAt(filaSeleccionada, 0).toString();
        String equipo = jTable1.getValueAt(filaSeleccionada, 1).toString(); // Agregado: Obtener valor de la columna "Equipo"
        String modeloUniforme = jTable1.getValueAt(filaSeleccionada, 2).toString();
        String noUniformes = jTable1.getValueAt(filaSeleccionada, 3).toString();
        String precio = jTable1.getValueAt(filaSeleccionada, 4).toString();

        // Obtener la fecha del pedido antes de eliminarlo
        java.sql.Date fechaPedido = obtenerFechaPedido(Integer.parseInt(noPedido));

        // Crear un objeto RegistroVentas y enviar los datos eliminados
        RegistroVentas registroVentas = new RegistroVentas();
        registroVentas.agregarRegistro(noPedido,equipo, modeloUniforme, noUniformes, precio, fechaPedido);
        registroVentas.mostrarRegistros(); // Asumiendo que tienes un método para mostrar registros en RegistroVentas
        registroVentas.setVisible(true);

        // Eliminar el registro de la tabla pedidos
        PreparedStatement ps = cn.prepareStatement("DELETE FROM pedidos WHERE NoPedido=?");
        ps.setInt(1, Integer.parseInt(noPedido));
        int indice = ps.executeUpdate();

        if (indice > 0) {
            mostrarPedidos();
            // Limpiar los campos después de la eliminación
            txtNoPedido.setText("");
            txtEquipo.setText(""); // Agregado: Limpiar campo de Equipo
            txtModeloUniforme.setText("");
            txtNoUniformes.setText("");
            txtPrecio.setText("");
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se seleccionó una fila");
        }
    } else {
        JOptionPane.showMessageDialog(rootPane, "Selecciona una fila primero.");
    }
} catch (SQLException | NumberFormatException e) {
    JOptionPane.showMessageDialog(rootPane, "Error al eliminar datos: " + e);
}
    }

// Método para obtener la fecha de un pedido dado su número
    private java.sql.Date obtenerFechaPedido(int noPedido) throws SQLException {
        java.sql.Date fechaPedido = null;

        PreparedStatement ps = cn.prepareStatement("SELECT Fecha FROM pedidos WHERE NoPedido=?");
        ps.setInt(1, noPedido);
        ResultSet rs = ps.executeQuery();

        if (rs.next()) {
            fechaPedido = rs.getDate("Fecha");
        }

        return fechaPedido;
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jTable1ComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentHidden
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1ComponentHidden

    private void btnCompletadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompletadoActionPerformed
        // TODO add your handling code here:
        String noPedido = txtNoPedido.getText();
    String equipo = txtEquipo.getText();
    String modeloUniforme = txtModeloUniforme.getText();
    String noUniformes = txtNoUniformes.getText();
    String precio = txtPrecio.getText();

    try {
        // Obtener la fecha actual
        java.util.Date fechaActual = new java.util.Date();
        java.sql.Date fechaSQL = new java.sql.Date(fechaActual.getTime());

        // Agregar el registro al historial con la fecha
        RegistroVentas registroVentas = new RegistroVentas();
        registroVentas.agregarRegistro(noPedido,equipo, modeloUniforme, noUniformes, precio, fechaSQL);
        registroVentas.setVisible(true);

        // Eliminar el registro de la tabla pedidos
        PreparedStatement ps = cn.prepareStatement("DELETE FROM pedidos WHERE NoPedido=?");
        ps.setInt(1, Integer.parseInt(noPedido));
        int indice = ps.executeUpdate();

        if (indice > 0) {
            mostrarPedidos();
            // Limpiar los campos después de la eliminación
            txtNoPedido.setText("");
            txtEquipo.setText("");
            txtModeloUniforme.setText("");
            txtNoUniformes.setText("");
            txtPrecio.setText("");
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se seleccionó una fila");
        }
    } catch (SQLException | NumberFormatException e) {
        JOptionPane.showMessageDialog(rootPane, "Error al completar pedido: " + e);
    }

    }//GEN-LAST:event_btnCompletadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pedidos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnCompletado;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtEquipo;
    private javax.swing.JTextField txtModeloUniforme;
    private javax.swing.JTextField txtNoPedido;
    private javax.swing.JTextField txtNoUniformes;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
